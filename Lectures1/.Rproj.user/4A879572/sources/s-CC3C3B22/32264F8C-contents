#==========================================#
# Eduard F Martinez-Gonzalez
# Update: 15-03-2022
# R version 4.1.1 (2021-08-10)
#==========================================#

# initial configuration
rm(list=ls())
if (!require("pacman")) install.packages("pacman") # Isntalar pacman (sino está instalada)
require(pacman) # llamar pacman

# llamar y/o instalar librerias
p_load(tidyverse,grid,png,
       viridis, # Paletas de colores
       sf, # Manipular datos espaciales
       leaflet, # Visualizar 
       tidycensus, # API Censo
       raster) # get crs()

#==============================#
# [1.] Introduccion a GIs en R #
#==============================#

# read shape
points = st_read("input/amenitys madrid.shp")
points
points %>% class() # get class

# plot points
leaflet() %>% 
addTiles() %>% 
addCircleMarkers(data = points , label = points$name)

# geometry
points %>% crs() # get CRS

points %>% st_crs() # get CRS

points %>% st_bbox() # get bbox

points %>% st_geometry() # get vertices

# attributes
points %>% colnames() # get column names

points$amenity %>% table() # frequency table

# add columns 
points = points %>% mutate(no_name = ifelse(is.na(name),1,0)) # add variable

points$no_name %>% table() # frequency table

points %>% head() # view

#==============================================#
# [2.] Modelo Monocéntrico y Precios del Suelo #
#==============================================#

#==== About tidycensus  ====#

# get access to the Census API
browseURL("http://api.census.gov/data/key_signup.html")

# interface with the US Census Bureau data
census_api_key("YOUR CENSUS API HERE",install=TRUE) 

# Variables
## get_decennial(): Datos decenales del censo de EE.UU. de 2000, 2010 y 2020
## get_acs(): Datos anuales del ACS (American Community Survey) de EE.UU de 2005-2019
vars = load_variables(year = 2018, dataset = "acs1", cache = TRUE)

# Geography
dev.off()
grid.raster(readPNG("input/pics/geography.png")) # Tomado de: https://walker-data.com/tidycensus
  
#==== Get data ====#

# get Median Housing Values Cook county
chicago = get_acs(geography="block group",variables="B25077_001E",state ="IL",county="Cook County",year=2019,geometry=T)

# get Median Housing Values Suffolk County
boston = get_acs(geography="block group",variables="B25077_001E",state ="MA",county="Suffolk County",year=2019,geometry = T)

## estimate (get_acs): estimated value 
## moe (get_acs): margin of error (90% by default)
## value (get_decennial): value censo

# plot layers
ggplot() + 
geom_sf(data=boston , col="black" , fill=NA) + theme_bw()

# another plot
leaflet() %>% 
addTiles() %>%
addPolygons(data=boston,color="green",fill=NA,weight=2,label=boston$estimate)

leaflet() %>% 
addTiles() %>%
addPolygons(data=chicago,color="green",fill=NA,weight=2)


#==== set CBD  ====#, -122.68155951190609
chicago_cbd = st_as_sf(x = read.table(text="-87.627800  41.881998"),
                       coords = c(1,2), crs = "+proj=longlat +datum=WGS84")

boston_cbd = st_as_sf(x = read.table(text="-71.057083  42.361145"),
                      coords = c(1,2),
                      crs = "+proj=longlat +datum=WGS84")

# put everything in the same projection
chicago_cbd = chicago_cbd %>% 
              st_transform(st_crs(chicago))

boston_cbd = boston_cbd %>% 
             st_transform(st_crs(boston))


#==== view data  ====#

leaflet(boston) %>% 
addTiles() %>% 
addPolygons(color="green",fill=NA,weight=2) %>% # Add blocks
addCircleMarkers(data=boston_cbd,col="red",weight=3) # Add CBD


#==== Distances to CBD  ====#

# distances
chicago$dist_CBD = st_distance(x = chicago , y = chicago_cbd) 
boston$dist_CBD = st_distance(x = boston , y = boston_cbd) 

# change units to miles
chicago$dist_CBD = as.numeric(chicago$dist_CBD)*0.000621371 
boston$dist_CBD = as.numeric(boston$dist_CBD)*0.000621371


#==== plot map ====#

# plot map
ggplot() + 
geom_sf(data=boston , col="black" , aes(fill=dist_CBD)) + 
scale_fill_viridis(option="A" , alpha=0.9 , direction=-1 , name="Dist. CBD (miles)") +
geom_sf(data=boston_cbd , col = "green" , size = 5) + theme_bw()

# prepare data
boston$City="Boston" # create name city
chicago$City="Chicago" # create name city
chicago=chicago %>% filter(dist_CBD<=10) # keep block groups in Cook County that are within 10 miles of the city center
st_geometry(chicago)=NULL
st_geometry(boston)=NULL
dta=rbind(chicago,boston) # stack data

# scaterplot
ggplot(dta, aes(x=dist_CBD, y=estimate, color=City)) +
geom_point(shape=1) + 
geom_smooth(method=lm) + 
xlab("Distance to CBD (miles)") +
ylab("Median Housing Prices ($)") + theme_bw()
ggsave("clase_2/output/figure_2.1.pdf")

